---
name: Unit Tests
on:
  pull_request:
    types:
      - opened
  release:
    types:
      - published
  schedule:
    - cron: 0 0 * * *
jobs:
  build:
    runs-on: ubuntu-latest
    name: Run the ufs_pyutils unit-tests.
    steps:
      - name: Build and install Python dependencies.
        run: >
          $(which wget) --no-check-certificate
          https://repo.anaconda.com/miniconda/Miniconda3-py39_4.10.3-Linux-x86_64.sh

          $(which sh) Miniconda3-py39_4.10.3-Linux-x86_64.sh -b -p miniconda

          $(which python) -m pip install --upgrade pip

          $(which pip) install netcdf4

          $(which pip) install numpy==1.22.4

          $(which pip) install astropy

          $(which pip) install bs4

          $(which pip) install croniter

          $(which pip) install pytest==7.2.0

          $(which pip) install pytest-order

          $(which pip) install schema

          $(which pip) install typing_extensions

          $(which conda) install -c anaconda pyyaml

          $(which conda) install -c anaconda boto3
      - name: Checkout ufs_pyutils.
        uses: actions/checkout@v2
        with:
          path: ufs_pyutils
      - name: Run ioapps package unit-tests.
        run: |
          export PYTHONPATH="${GITHUB_WORKSPACE}/ufs_pyutils"
          cd ${GITHUB_WORKSPACE}/ufs_pyutils/ioapps
          $(which pytest)
      - name: Run tools package unit-tests.
        run: |
          export PYTHONPATH="${GITHUB_WORKSPACE}/ufs_pyutils"
          cd ufs_pyutils/tools
          $(which pytest)
      - name: Run tools package unit-tests.
        run: |
          export PYTHONPATH="${GITHUB_WORKSPACE}/ufs_pyutils"
          cd ufs_pyutils/confs
          $(which pytest)
      - name: Upload coverage reports to Codecov.
        uses: codecov/codecov-action@v1
        env:
           CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
